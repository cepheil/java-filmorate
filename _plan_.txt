create() — вставка нового пользователя (INSERT INTO users ...)  User+  // Film+

update() — обновление данных (UPDATE users SET ... WHERE id=?)   User+  // Film+

delete() — удаление по id   User+  // Film+

findById() — получение по id  User+  // Film+

findAll() — список всех пользователей   User+  // Film+

_______________________________________________________________
работа с таблицей friendships  +++

addFriend(),

removeFriend()

getFriends() — JOIN таблицы users + friendships

getMutualFriends() — SQL с пересечением списков друзей


public enum FriendshipStatus {
    CONFIRMED,
    REQUEST_RECEIVED,
    PENDING
}

_______________________________________________________________
FIND_ALL_FILMS_QUERY: Получение всех фильмов с MPA-рейтингом  ++

FIND_FILM_BY_ID_QUERY: Поиск фильма по ID  ++

INSERT_FILM_QUERY: Создание нового фильма  ++

UPDATE_FILM_QUERY: Обновление фильма   ++

DELETE_FILM_QUERY: Удаление фильма  ++

GET_POPULAR_FILM_QUERY: Получение популярных фильмов ++

DELETE_GENRE_FILM_QUERY: Удаление жанров фильма

INSERT_GENRE_FILM_QUERY: Добавление жанров фильма
_______________________________________________________________


Для получения списка всех жанров и для получения жанра по его идентификатору:

    GET /genres — возвращает список объектов содержащих жанр
    GET /genres/{id} — возвращает объект содержащий жанр с идентификатором id
    Пример возвращаемого значения

{
 “id”: 1,
 “name”: “Комедия”
}



Для получения списка всех рейтингов и для получения рейтинга по его идентификатору:

    GET /mpa — возвращает список объектов содержащих рейтинг
    GET /mpa/{id} — возвращает объект содержащий рейтинг с идентификатором id
    Пример возвращаемого значения

{
 “id”: 1,
 “name”: “G”
}


При создании и получении фильмов достаточно передать список идентификаторов
жанров и идентификатор рейтинга.
Эти же данные должны передаваться при обновлении, создании и получении фильмов — если нужно,
обновите эти эндпоинты.

И последнее небольшое изменение: дружба должна стать односторонней.
Теперь, если пользователь отправляет заявку в друзья,
он добавляет другого человека в свой список друзей,
но сам в его список не попадает.


Не забудьте: у пользователей Filmorate должна быть возможность лайкать фильмы
и добавлять друг друга в друзья с подтверждением дружбы.