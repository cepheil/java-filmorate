-- Таблица пользователей
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, --AUTO_INCREMENT,
    email VARCHAR(64) NOT NULL UNIQUE, --CHECK (CHAR_LENGTH(email) > 5),
    login VARCHAR(32) NOT NULL UNIQUE,
    name VARCHAR(64),
    birthday DATE NOT NULL
);

-- Таблица дружеских связей
CREATE TABLE IF NOT EXISTS friendships (
    user_id BIGINT NOT NULL REFERENCES users(id),
    friend_id BIGINT NOT NULL REFERENCES users(id),
    status VARCHAR(20) NOT NULL CHECK (status IN ('PENDING', 'REQUEST_RECEIVED', 'CONFIRMED')),
    PRIMARY KEY (user_id, friend_id),
    CHECK (user_id != friend_id)
);

-- Таблица рейтингов MPA
CREATE TABLE IF NOT EXISTS ratings_mpa (
    mpa_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, --AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL UNIQUE
);

-- Таблица фильмов
CREATE TABLE IF NOT EXISTS films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, --AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE NOT NULL CHECK (release_date >= DATE '1895-12-28'),
    duration INTEGER NOT NULL CHECK (duration > 0),
    mpa_id BIGINT NOT NULL REFERENCES ratings_mpa(mpa_id)
);

-- Таблица лайков
CREATE TABLE IF NOT EXISTS likes (
    film_id BIGINT NOT NULL REFERENCES films(id),
    user_id BIGINT NOT NULL REFERENCES users(id),
    PRIMARY KEY (film_id, user_id)
);

-- Таблица жанров фильмов
CREATE TABLE IF NOT EXISTS genres (
    genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, --AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL UNIQUE
);

-- Связь фильмов и жанров
CREATE TABLE IF NOT EXISTS film_genre (
    film_id BIGINT NOT NULL REFERENCES films(id),
    genre_id BIGINT NOT NULL REFERENCES genres(genre_id),
    PRIMARY KEY (film_id, genre_id)
);